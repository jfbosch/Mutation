<ContentDialog
    x:Class="Mutation.Ui.Views.SettingsWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:settings="using:Mutation.Ui.Views.Settings"
    xmlns:local="using:Mutation.Ui.Views"
    mc:Ignorable="d"
    Width="900"
    Height="640"
    MinWidth="720"
    MinHeight="520"
    MaxWidth="980"
    MaxHeight="760"
    DefaultButton="None"
    IsPrimaryButtonEnabled="False"
    IsSecondaryButtonEnabled="False"
    BorderThickness="0"
    Background="{ThemeResource LayerFillColorDefaultBrush}">

    <ContentDialog.Resources>
        <local:SettingsValidationBrushConverter x:Key="ValidationBrushConverter" />
        <local:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <local:ErrorMessageVisibilityConverter x:Key="ErrorMessageVisibilityConverter" />

        <DataTemplate x:Key="InfoTemplate" x:DataType="settings:SettingRowViewModel">
            <TextBlock
                Text="{x:Bind TextValue}"
                TextWrapping="Wrap"
                AutomationProperties.Name="{x:Bind DisplayName}" />
        </DataTemplate>

        <DataTemplate x:Key="NumberTemplate" x:DataType="settings:SettingRowViewModel">
            <NumberBox
                Width="220"
                Minimum="{x:Bind Min, Mode=OneWay}"
                Maximum="{x:Bind Max, Mode=OneWay}"
                SmallChange="{x:Bind Step, Mode=OneWay}"
                SpinButtonPlacementMode="Compact"
                Value="{x:Bind DoubleValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                IsEnabled="{x:Bind IsEnabled, Mode=OneWay}"
                AutomationProperties.Name="{x:Bind DisplayName}"
                AutomationProperties.HelpText="{x:Bind Description}" />
        </DataTemplate>

        <DataTemplate x:Key="ToggleTemplate" x:DataType="settings:SettingRowViewModel">
            <ToggleSwitch
                IsOn="{x:Bind BoolValue, Mode=TwoWay}"
                AutomationProperties.Name="{x:Bind DisplayName}"
                AutomationProperties.HelpText="{x:Bind Description}" />
        </DataTemplate>

        <DataTemplate x:Key="TextTemplate" x:DataType="settings:SettingRowViewModel">
            <TextBox
                Text="{x:Bind TextValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                PlaceholderText="{x:Bind Placeholder}"
                IsReadOnly="{x:Bind IsReadOnly}"
                AutomationProperties.Name="{x:Bind DisplayName}"
                AutomationProperties.HelpText="{x:Bind Description}" />
        </DataTemplate>

        <DataTemplate x:Key="ComboTemplate" x:DataType="settings:SettingRowViewModel">
            <ComboBox
                Width="280"
                ItemsSource="{x:Bind Choices}"
                SelectedValuePath="Id"
                SelectedValue="{x:Bind TextValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                IsEditable="False"
                PlaceholderText="Select a device"
                AutomationProperties.Name="{x:Bind DisplayName}"
                AutomationProperties.HelpText="{x:Bind Description}">
                <ComboBox.ItemTemplate>
                    <DataTemplate x:DataType="settings:AudioDeviceOption">
                        <TextBlock Text="{x:Bind DisplayName}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </DataTemplate>

        <DataTemplate x:Key="FileTemplate" x:DataType="settings:SettingRowViewModel">
            <TextBox
                Text="{x:Bind TextValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                PlaceholderText="{x:Bind Placeholder}"
                AutomationProperties.Name="{x:Bind DisplayName}"
                AutomationProperties.HelpText="{x:Bind Description}" />
        </DataTemplate>

        <local:SettingsEditorTemplateSelector
            x:Key="EditorTemplateSelector"
            InfoTemplate="{StaticResource InfoTemplate}"
            NumberTemplate="{StaticResource NumberTemplate}"
            ToggleTemplate="{StaticResource ToggleTemplate}"
            TextTemplate="{StaticResource TextTemplate}"
            HotkeyTemplate="{StaticResource TextTemplate}"
            ComboTemplate="{StaticResource ComboTemplate}"
            FileTemplate="{StaticResource FileTemplate}" />

        <Style TargetType="ListViewItem" x:Key="SettingsListItemStyle">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
        </Style>
    </ContentDialog.Resources>

    <Grid RowSpacing="24" ColumnSpacing="0" Padding="32">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Header -->
        <Grid Grid.Row="0" ColumnSpacing="16" VerticalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Vertical" Spacing="4">
                <TextBlock Text="Application Settings" Style="{StaticResource TitleTextStyle}" />
                <TextBlock
                    Text="Update Mutation without editing JSON files."
                    Style="{StaticResource BodyTextStyle}" />
            </StackPanel>
            <Button
                Grid.Column="1"
                Style="{StaticResource SubtleButtonStyle}"
                AutomationProperties.Name="Close settings"
                AutomationProperties.HelpText="Close without saving"
                Click="CloseButton_Click">
                <FontIcon Glyph="&#xE8BB;" FontFamily="Segoe Fluent Icons" />
            </Button>
        </Grid>

        <!-- Body -->
        <Grid Grid.Row="1" ColumnSpacing="24">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="220" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <RadioButtons
                x:Name="CategoryButtons"
                ItemsSource="{x:Bind ViewModel.Categories}"
                SelectedItem="{x:Bind ViewModel.SelectedCategory, Mode=TwoWay}"
                MaxWidth="220"
                VerticalAlignment="Stretch">
                <RadioButtons.ItemTemplate>
                    <DataTemplate x:DataType="settings:SettingsCategoryViewModel">
                        <RadioButton
                            Content="{x:Bind DisplayName}"
                            Margin="0,6"
                            IsEnabled="{x:Bind IsEnabled}" />
                    </DataTemplate>
                </RadioButtons.ItemTemplate>
            </RadioButtons>

            <Grid Grid.Column="1" RowSpacing="16">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <InfoBar
                    Grid.Row="0"
                    Margin="0,0,0,8"
                    IsOpen="{x:Bind ViewModel.IsInfoBarOpen, Mode=OneWay}"
                    Severity="{x:Bind ViewModel.InfoBarSeverity, Mode=OneWay}"
                    Message="{x:Bind ViewModel.InfoBarMessage, Mode=OneWay}"
                    IsClosable="False"
                    Visibility="{x:Bind ViewModel.IsInfoBarOpen, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                    <InfoBar.ActionButton>
                        <Button Content="Go to next issue" Command="{x:Bind ViewModel.GoToNextIssueCommand}" />
                    </InfoBar.ActionButton>
                </InfoBar>

                <ListView
                    x:Name="SettingsList"
                    Grid.Row="1"
                    ItemsSource="{x:Bind ViewModel.SelectedCategoryRows}"
                    SelectionMode="None"
                    ItemContainerStyle="{StaticResource SettingsListItemStyle}">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="settings:SettingRowViewModel">
                            <Grid
                                ColumnSpacing="16"
                                RowSpacing="4"
                                Margin="0,0,0,20"
                                IsEnabled="{x:Bind IsEnabled}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="28" />
                                    <ColumnDefinition Width="260" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <FontIcon
                                    Grid.Column="0"
                                    Glyph="&#xEA39;"
                                    FontFamily="Segoe Fluent Icons"
                                    Foreground="{x:Bind ValidationState, Converter={StaticResource ValidationBrushConverter}}"
                                    Visibility="{x:Bind HasValidationIssue, Converter={StaticResource BoolToVisibilityConverter}}"
                                    ToolTipService.ToolTip="{x:Bind ValidationMessage}" />

                                <StackPanel Grid.Column="1" Spacing="4">
                                    <TextBlock
                                        Text="{x:Bind DisplayName}"
                                        Style="{StaticResource SubtitleTextStyle}" />
                                    <TextBlock
                                        Text="{x:Bind ValidationMessage}"
                                        Foreground="{ThemeResource TextFillColorCriticalBrush}"
                                        Visibility="{x:Bind ValidationState, Converter={StaticResource ErrorMessageVisibilityConverter}}"
                                        TextWrapping="WrapWholeWords" />
                                    <TextBlock
                                        Text="{x:Bind Description}"
                                        Style="{StaticResource CaptionTextStyle}"
                                        Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                        TextWrapping="Wrap"
                                        Visibility="{x:Bind Description, Converter={StaticResource StringToVisibilityConverter}}" />
                                </StackPanel>

                                <ContentPresenter
                                    x:Name="EditorPresenter"
                                    Grid.Column="2"
                                    Content="{Binding Mode=OneWay}"
                                    ContentTemplateSelector="{StaticResource EditorTemplateSelector}" />

                                <StackPanel Grid.Column="3" Orientation="Horizontal" Spacing="8" VerticalAlignment="Center">
                                    <Button
                                        Content="{x:Bind PrimaryActionLabel}"
                                        Command="{x:Bind PrimaryActionCommand}"
                                        Visibility="{x:Bind PrimaryActionLabel, Converter={StaticResource StringToVisibilityConverter}}"
                                        AutomationProperties.Name="{x:Bind DisplayName} action"
                                        AutomationProperties.HelpText="{x:Bind Description}" />
                                    <Button
                                        Content="{x:Bind SecondaryActionLabel}"
                                        Command="{x:Bind SecondaryActionCommand}"
                                        Visibility="{x:Bind SecondaryActionLabel, Converter={StaticResource StringToVisibilityConverter}}" />
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </Grid>

        <!-- Footer -->
        <Grid Grid.Row="2" ColumnSpacing="12" HorizontalAlignment="Right">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button
                Grid.Column="0"
                Content="Reset to defaults"
                Command="{x:Bind ViewModel.ResetDefaultsCommand}"
                IsEnabled="False"
                AutomationProperties.HelpText="Reset settings to default values"
                Margin="0,0,12,0" />

            <Button
                Grid.Column="1"
                Content="Cancel"
                Style="{StaticResource DefaultButtonStyle}"
                Command="{x:Bind ViewModel.CancelCommand}"
                Margin="0,0,12,0"
                AutomationProperties.Name="Cancel"
                AutomationProperties.HelpText="Discard changes" />

            <Button
                Grid.Column="2"
                Content="Save"
                Style="{StaticResource AccentButtonStyle}"
                Command="{x:Bind ViewModel.SaveCommand}"
                IsEnabled="{x:Bind ViewModel.CanSave, Mode=OneWay}"
                AutomationProperties.Name="Save settings"
                AutomationProperties.HelpText="Validate and apply settings" />
        </Grid>
    </Grid>
</ContentDialog>
