<?xml version="1.0" encoding="utf-8"?>
<ContentDialog
    x:Class="Mutation.Ui.Views.SettingsDialog"
    x:Name="SettingsRoot"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="using:Mutation.Ui.ViewModels.Settings"
    mc:Ignorable="d"
    Title="Settings"
    PrimaryButtonText="Save"
    SecondaryButtonText="Cancel"
    DefaultButton="Primary"
    IsPrimaryButtonEnabled="{x:Bind ViewModel.CanSave, Mode=OneWay}"
    PrimaryButtonClick="ContentDialog_PrimaryButtonClick">

    <ContentDialog.Resources>
        <Thickness x:Key="SectionMargin">0,0,0,28</Thickness>
        <Style TargetType="TextBlock" x:Key="SectionTitleStyle" BasedOn="{StaticResource BodyStrongTextBlockStyle}">
            <Setter Property="FontSize" Value="20" />
        </Style>
    </ContentDialog.Resources>

    <Grid ColumnSpacing="32" RowSpacing="0" MinHeight="520" MinWidth="960">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="240" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0" Spacing="12">
            <TextBlock Text="Workspace areas" Style="{StaticResource SubtitleTextBlockStyle}" />
            <ListView
                ItemsSource="{x:Bind ViewModel.Sections, Mode=OneWay}"
                SelectedItem="{x:Bind ViewModel.SelectedSectionItem, Mode=TwoWay}"
                SelectionMode="Single"
                HorizontalAlignment="Stretch"
                MinHeight="420">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="viewModels:SettingsSectionItem">
                        <StackPanel Spacing="4" Padding="12,8">
                            <TextBlock Text="{x:Bind Title}" Style="{StaticResource BodyStrongTextBlockStyle}" />
                            <TextBlock Text="{x:Bind Description}" Style="{StaticResource CaptionTextBlockStyle}" TextWrapping="Wrap" />
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </StackPanel>

        <ScrollViewer Grid.Column="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
            <StackPanel Spacing="36" Padding="0,0,4,12">
                <InfoBar
                    Severity="Error"
                    IsClosable="False"
                    IsOpen="{x:Bind ViewModel.HasValidationErrors, Mode=OneWay}"
                    Title="Review required settings">
                    <ItemsControl ItemsSource="{x:Bind ViewModel.ValidationErrors, Mode=OneWay}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock TextWrapping="Wrap" Text="{Binding}" Margin="0,2,0,2" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </InfoBar>
                <StackPanel
                    x:Name="GeneralSectionPanel"
                    Margin="{StaticResource SectionMargin}"
                    Visibility="{x:Bind ViewModel.GeneralSectionVisibility, Mode=OneWay}"
                    x:Load="{x:Bind ViewModel.IsGeneralSectionVisible}">
                    <TextBlock Text="Guidance" Style="{StaticResource SectionTitleStyle}" />
                    <TextBlock Text="Write any high-level instructions that Mutation should keep in mind." Style="{StaticResource CaptionTextBlockStyle}" />
                    <TextBox
                        Margin="0,12,0,0"
                        AcceptsReturn="True"
                        TextWrapping="Wrap"
                        PlaceholderText="Enter your persistent workspace notes"
                        Height="160"
                        Text="{x:Bind ViewModel.WorkingCopy.UserInstructions, Mode=TwoWay}" />
                </StackPanel>

                <StackPanel
                    x:Name="AudioSectionPanel"
                    Margin="{StaticResource SectionMargin}"
                    Spacing="12"
                    Visibility="{x:Bind ViewModel.AudioSectionVisibility, Mode=OneWay}"
                    x:Load="{x:Bind ViewModel.IsAudioSectionVisible}">
                    <TextBlock Text="Audio" Style="{StaticResource SectionTitleStyle}" />
                    <Grid ColumnSpacing="16" RowSpacing="12">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Row="0" Grid.ColumnSpan="2" Spacing="4">
                            <TextBlock Text="Mute toggle hotkey" />
                            <TextBox Text="{x:Bind ViewModel.WorkingCopy.AudioSettings.MicrophoneToggleMuteHotKey, Mode=TwoWay}" PlaceholderText="CTRL+ALT+M" />
                        </StackPanel>

                        <ToggleSwitch
                            Grid.Row="1"
                            Grid.ColumnSpan="2"
                            Header="Microphone visualization"
                            OnContent="Enabled"
                            OffContent="Disabled"
                            IsOn="{x:Bind ViewModel.WorkingCopy.AudioSettings.EnableMicrophoneVisualization, Mode=TwoWay}" />

                        <ToggleSwitch
                            Grid.Row="2"
                            Grid.ColumnSpan="2"
                            Header="Use custom beep files"
                            IsOn="{x:Bind ViewModel.WorkingCopy.AudioSettings.CustomBeepSettings.UseCustomBeeps, Mode=TwoWay}" />

                        <StackPanel Grid.Row="3" Grid.ColumnSpan="2" Spacing="6">
                            <TextBlock Text="Custom beep files" Style="{StaticResource BodyStrongTextBlockStyle}" />
                            <Grid ColumnSpacing="12" RowSpacing="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <StackPanel Grid.Row="0" Grid.Column="0" Spacing="2">
                                    <TextBlock Text="Success" Style="{StaticResource CaptionTextBlockStyle}" />
                                    <TextBox Text="{x:Bind ViewModel.WorkingCopy.AudioSettings.CustomBeepSettings.BeepSuccessFile, Mode=TwoWay}" />
                                </StackPanel>
                                <Button Grid.Row="0" Grid.Column="1" Content="Browse" Click="BrowseSuccess_Click" />

                                <StackPanel Grid.Row="1" Grid.Column="0" Spacing="2">
                                    <TextBlock Text="Failure" Style="{StaticResource CaptionTextBlockStyle}" />
                                    <TextBox Text="{x:Bind ViewModel.WorkingCopy.AudioSettings.CustomBeepSettings.BeepFailureFile, Mode=TwoWay}" />
                                </StackPanel>
                                <Button Grid.Row="1" Grid.Column="1" Content="Browse" Click="BrowseFailure_Click" />

                                <StackPanel Grid.Row="2" Grid.Column="0" Spacing="2">
                                    <TextBlock Text="Mute" Style="{StaticResource CaptionTextBlockStyle}" />
                                    <TextBox Text="{x:Bind ViewModel.WorkingCopy.AudioSettings.CustomBeepSettings.BeepMuteFile, Mode=TwoWay}" />
                                </StackPanel>
                                <Button Grid.Row="2" Grid.Column="1" Content="Browse" Click="BrowseMute_Click" />
                            </Grid>
                        </StackPanel>

                        <StackPanel Grid.Row="4" Grid.ColumnSpan="2" Spacing="6">
                            <StackPanel Orientation="Horizontal" Spacing="12">
                                <StackPanel Width="260" Spacing="2">
                                    <TextBlock Text="Start" Style="{StaticResource CaptionTextBlockStyle}" />
                                    <TextBox Text="{x:Bind ViewModel.WorkingCopy.AudioSettings.CustomBeepSettings.BeepStartFile, Mode=TwoWay}" />
                                </StackPanel>
                                <Button Content="Browse" Click="BrowseStart_Click" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Spacing="12">
                                <StackPanel Width="260" Spacing="2">
                                    <TextBlock Text="End" Style="{StaticResource CaptionTextBlockStyle}" />
                                    <TextBox Text="{x:Bind ViewModel.WorkingCopy.AudioSettings.CustomBeepSettings.BeepEndFile, Mode=TwoWay}" />
                                </StackPanel>
                                <Button Content="Browse" Click="BrowseEnd_Click" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Spacing="12">
                                <StackPanel Width="260" Spacing="2">
                                    <TextBlock Text="Unmute" Style="{StaticResource CaptionTextBlockStyle}" />
                                    <TextBox Text="{x:Bind ViewModel.WorkingCopy.AudioSettings.CustomBeepSettings.BeepUnmuteFile, Mode=TwoWay}" />
                                </StackPanel>
                                <Button Content="Browse" Click="BrowseUnmute_Click" />
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </StackPanel>

                <StackPanel
                    x:Name="SpeechToTextSectionPanel"
                    Margin="{StaticResource SectionMargin}"
                    Spacing="16"
                    Visibility="{x:Bind ViewModel.SpeechToTextSectionVisibility, Mode=OneWay}"
                    x:Load="{x:Bind ViewModel.IsSpeechToTextSectionVisible}">
                    <TextBlock Text="Speech to text" Style="{StaticResource SectionTitleStyle}" />

                    <StackPanel Spacing="8">
                        <TextBlock Text="Recording storage" />
                        <Grid ColumnSpacing="12">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Column="0" Text="{x:Bind ViewModel.WorkingCopy.SpeechToTextSettings.TempDirectory, Mode=TwoWay}" PlaceholderText="C:\\Users\\You\\AppData\\Local\\Temp" />
                            <Button Grid.Column="1" Content="Choose" Click="BrowseTempFolder_Click" />
                        </Grid>
                    </StackPanel>

                    <StackPanel Spacing="8">
                        <TextBlock Text="Start / stop recording hotkey" />
                        <TextBox Text="{x:Bind ViewModel.WorkingCopy.SpeechToTextSettings.SpeechToTextHotKey, Mode=TwoWay}" PlaceholderText="CTRL+SHIFT+Space" />
                    </StackPanel>

                    <StackPanel Spacing="8">
                        <TextBlock Text="Hotkey after transcription" />
                        <TextBox Text="{x:Bind ViewModel.WorkingCopy.SpeechToTextSettings.SendHotkeyAfterTranscriptionOperation, Mode=TwoWay}" PlaceholderText="Optional" />
                    </StackPanel>

                    <StackPanel Spacing="12">
                        <Grid ColumnSpacing="12" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Providers" Grid.Column="0" Style="{StaticResource BodyStrongTextBlockStyle}" />
                            <Button Grid.Column="1" Content="Add provider" Command="{x:Bind ViewModel.AddSpeechServiceCommand}" />
                        </Grid>

                        <ListView ItemsSource="{x:Bind ViewModel.SpeechServices, Mode=OneWay}" SelectionMode="None">
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="viewModels:SpeechServiceEntryViewModel">
                                    <Border Style="{StaticResource CardStyle}" Margin="0,4,0,4" Padding="16">
                                        <StackPanel Spacing="12">
                                            <Grid ColumnSpacing="12">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="2*" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <StackPanel Grid.Column="0" Spacing="6">
                                                    <TextBlock Text="Display name" />
                                                    <TextBox Text="{x:Bind Name, Mode=TwoWay}" PlaceholderText="Production" />
                                                </StackPanel>
                                                <StackPanel Grid.Column="1" Spacing="6">
                                                    <TextBlock Text="Provider" />
                                                    <ComboBox ItemsSource="{x:Bind SettingsRoot.ViewModel.ProviderOptions, Mode=OneWay}" SelectedItem="{x:Bind Provider, Mode=TwoWay}" />
                                                </StackPanel>
                                            </Grid>

                                            <Grid ColumnSpacing="12">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <StackPanel Grid.Column="0" Spacing="6">
                                                    <TextBlock Text="API key" />
                                                    <TextBox Text="{x:Bind ApiKey, Mode=TwoWay}" PlaceholderText="Key" />
                                                </StackPanel>
                                                <StackPanel Grid.Column="1" Spacing="6">
                                                    <TextBlock Text="Base domain" />
                                                    <TextBox Text="{x:Bind BaseDomain, Mode=TwoWay}" PlaceholderText="api.openai.com" />
                                                </StackPanel>
                                            </Grid>

                                            <Grid ColumnSpacing="12">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="2*" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <StackPanel Grid.Column="0" Spacing="6">
                                                    <TextBlock Text="Model" />
                                                    <TextBox Text="{x:Bind ModelId, Mode=TwoWay}" PlaceholderText="whisper-1" />
                                                </StackPanel>
                                                <StackPanel Grid.Column="1" Spacing="6">
                                                    <TextBlock Text="Timeout (seconds)" />
                                                    <NumberBox Value="{x:Bind TimeoutSeconds, Mode=TwoWay}" Minimum="1" Maximum="120" SpinButtonPlacementMode="Inline" />
                                                </StackPanel>
                                            </Grid>

                                            <StackPanel Spacing="6">
                                                <TextBlock Text="Prompt" />
                                                <TextBox Text="{x:Bind Prompt, Mode=TwoWay}" PlaceholderText="Optional prompt" AcceptsReturn="True" />
                                            </StackPanel>

                                            <Button Content="Remove" HorizontalAlignment="Left" Command="{x:Bind SettingsRoot.ViewModel.RemoveSpeechServiceCommand}" CommandParameter="{Binding}" />
                                        </StackPanel>
                                    </Border>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </StackPanel>
                </StackPanel>

                <StackPanel
                    x:Name="LlmSectionPanel"
                    Margin="{StaticResource SectionMargin}"
                    Spacing="16"
                    Visibility="{x:Bind ViewModel.LlmSectionVisibility, Mode=OneWay}"
                    x:Load="{x:Bind ViewModel.IsLlmSectionVisible}">
                    <TextBlock Text="Large language model" Style="{StaticResource SectionTitleStyle}" />
                    <StackPanel Spacing="8">
                        <TextBlock Text="API key" />
                        <TextBox Text="{x:Bind ViewModel.WorkingCopy.LlmSettings.ApiKey, Mode=TwoWay}" PlaceholderText="Key" />
                    </StackPanel>
                    <StackPanel Spacing="8">
                        <TextBlock Text="Resource name" />
                        <TextBox Text="{x:Bind ViewModel.WorkingCopy.LlmSettings.ResourceName, Mode=TwoWay}" PlaceholderText="Optional" />
                    </StackPanel>
                    <StackPanel Spacing="8">
                        <TextBlock Text="Formatting prompt" />
                        <TextBox Text="{x:Bind ViewModel.WorkingCopy.LlmSettings.FormatTranscriptPrompt, Mode=TwoWay}" AcceptsReturn="True" PlaceholderText="Describe how transcripts should be formatted" />
                    </StackPanel>

                    <StackPanel Spacing="12">
                        <Grid ColumnSpacing="12">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Model deployments" Grid.Column="0" Style="{StaticResource BodyStrongTextBlockStyle}" />
                            <Button Grid.Column="1" Content="Add mapping" Command="{x:Bind ViewModel.AddDeploymentCommand}" />
                        </Grid>
                        <ListView ItemsSource="{x:Bind ViewModel.ModelDeploymentMaps, Mode=OneWay}" SelectionMode="None">
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="viewModels:ModelDeploymentMapViewModel">
                                    <Border Style="{StaticResource CardStyle}" Margin="0,4,0,4" Padding="16">
                                        <Grid ColumnSpacing="12">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <StackPanel Grid.Column="0" Spacing="6">
                                                <TextBlock Text="Model" />
                                                <TextBox Text="{x:Bind ModelName, Mode=TwoWay}" PlaceholderText="gpt-4o" />
                                            </StackPanel>
                                            <StackPanel Grid.Column="1" Spacing="6">
                                                <TextBlock Text="Deployment" />
                                                <TextBox Text="{x:Bind DeploymentId, Mode=TwoWay}" PlaceholderText="mutation-format" />
                                            </StackPanel>
                                            <Button Grid.Column="2" Content="Remove" Command="{x:Bind SettingsRoot.ViewModel.RemoveDeploymentCommand}" CommandParameter="{Binding}" />
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </StackPanel>

                    <StackPanel Spacing="12">
                        <Grid ColumnSpacing="12">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Transcript formatting rules" Grid.Column="0" Style="{StaticResource BodyStrongTextBlockStyle}" />
                            <Button Grid.Column="1" Content="Add rule" Command="{x:Bind ViewModel.AddRuleCommand}" />
                        </Grid>
                        <ListView ItemsSource="{x:Bind ViewModel.TranscriptRules, Mode=OneWay}" SelectionMode="None">
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="viewModels:TranscriptFormatRuleViewModel">
                                    <Border Style="{StaticResource CardStyle}" Margin="0,4,0,4" Padding="16">
                                        <StackPanel Spacing="12">
                                            <Grid ColumnSpacing="12">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <StackPanel Grid.Column="0" Spacing="6">
                                                    <TextBlock Text="Find" />
                                                    <TextBox Text="{x:Bind Find, Mode=TwoWay}" PlaceholderText="Original" />
                                                </StackPanel>
                                                <StackPanel Grid.Column="1" Spacing="6">
                                                    <TextBlock Text="Replace with" />
                                                    <TextBox Text="{x:Bind ReplaceWith, Mode=TwoWay}" PlaceholderText="Replacement" />
                                                </StackPanel>
                                            </Grid>
                                            <Grid ColumnSpacing="12">
                                            <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                                <StackPanel Grid.Column="0" Spacing="6">
                                                    <TextBlock Text="Match type" />
                                                    <ComboBox ItemsSource="{x:Bind SettingsRoot.ViewModel.MatchTypeOptions, Mode=OneWay}" SelectedItem="{x:Bind MatchType, Mode=TwoWay}" />
                                                </StackPanel>
                                                <ToggleSwitch Grid.Column="1" Header="Case sensitive" IsOn="{x:Bind CaseSensitive, Mode=TwoWay}" />
                                            </Grid>
                                            <Button Content="Remove" HorizontalAlignment="Left" Command="{x:Bind SettingsRoot.ViewModel.RemoveRuleCommand}" CommandParameter="{Binding}" />
                                        </StackPanel>
                                    </Border>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </StackPanel>
                </StackPanel>

                <StackPanel
                    x:Name="OcrSectionPanel"
                    Margin="{StaticResource SectionMargin}"
                    Spacing="16"
                    Visibility="{x:Bind ViewModel.OcrSectionVisibility, Mode=OneWay}"
                    x:Load="{x:Bind ViewModel.IsOcrSectionVisible}">
                    <TextBlock Text="OCR" Style="{StaticResource SectionTitleStyle}" />
                    <StackPanel Spacing="8">
                        <TextBlock Text="API key" />
                        <TextBox Text="{x:Bind ViewModel.WorkingCopy.AzureComputerVisionSettings.ApiKey, Mode=TwoWay}" PlaceholderText="Key" />
                    </StackPanel>
                    <StackPanel Spacing="8">
                        <TextBlock Text="Endpoint" />
                        <TextBox Text="{x:Bind ViewModel.WorkingCopy.AzureComputerVisionSettings.Endpoint, Mode=TwoWay}" PlaceholderText="https://..." />
                    </StackPanel>
                    <StackPanel Spacing="8">
                        <TextBlock Text="Timeout (seconds)" />
                        <NumberBox Value="{x:Bind ViewModel.OcrTimeoutSeconds, Mode=TwoWay}" Minimum="1" Maximum="120" SpinButtonPlacementMode="Inline" />
                    </StackPanel>
                    <StackPanel Spacing="6">
                        <TextBlock Text="Screenshot hotkey" />
                        <TextBox Text="{x:Bind ViewModel.WorkingCopy.AzureComputerVisionSettings.ScreenshotHotKey, Mode=TwoWay}" PlaceholderText="CTRL+SHIFT+S" />
                    </StackPanel>
                    <StackPanel Spacing="6">
                        <TextBlock Text="Screenshot + OCR hotkey" />
                        <TextBox Text="{x:Bind ViewModel.WorkingCopy.AzureComputerVisionSettings.ScreenshotOcrHotKey, Mode=TwoWay}" PlaceholderText="CTRL+SHIFT+O" />
                    </StackPanel>
                    <StackPanel Spacing="6">
                        <TextBlock Text="Screenshot (LRTB) hotkey" />
                        <TextBox Text="{x:Bind ViewModel.WorkingCopy.AzureComputerVisionSettings.ScreenshotLeftToRightTopToBottomOcrHotKey, Mode=TwoWay}" />
                    </StackPanel>
                    <StackPanel Spacing="6">
                        <TextBlock Text="OCR from clipboard" />
                        <TextBox Text="{x:Bind ViewModel.WorkingCopy.AzureComputerVisionSettings.OcrHotKey, Mode=TwoWay}" />
                    </StackPanel>
                    <StackPanel Spacing="6">
                        <TextBlock Text="OCR from clipboard (LRTB)" />
                        <TextBox Text="{x:Bind ViewModel.WorkingCopy.AzureComputerVisionSettings.OcrLeftToRightTopToBottomHotKey, Mode=TwoWay}" />
                    </StackPanel>
                    <StackPanel Spacing="6">
                        <TextBlock Text="Hotkey to send after OCR" />
                        <TextBox Text="{x:Bind ViewModel.WorkingCopy.AzureComputerVisionSettings.SendHotkeyAfterOcrOperation, Mode=TwoWay}" PlaceholderText="Optional" />
                    </StackPanel>
                </StackPanel>

                <StackPanel
                    x:Name="TextToSpeechSectionPanel"
                    Margin="{StaticResource SectionMargin}"
                    Spacing="16"
                    Visibility="{x:Bind ViewModel.TextToSpeechSectionVisibility, Mode=OneWay}"
                    x:Load="{x:Bind ViewModel.IsTextToSpeechSectionVisible}">
                    <TextBlock Text="Text to speech" Style="{StaticResource SectionTitleStyle}" />
                    <StackPanel Spacing="8">
                        <TextBlock Text="Hotkey" />
                        <TextBox Text="{x:Bind ViewModel.WorkingCopy.TextToSpeechSettings.TextToSpeechHotKey, Mode=TwoWay}" PlaceholderText="CTRL+SHIFT+T" />
                    </StackPanel>
                </StackPanel>

                <StackPanel
                    x:Name="InterfaceSectionPanel"
                    Margin="{StaticResource SectionMargin}"
                    Spacing="16"
                    Visibility="{x:Bind ViewModel.InterfaceSectionVisibility, Mode=OneWay}"
                    x:Load="{x:Bind ViewModel.IsInterfaceSectionVisible}">
                    <TextBlock Text="Interface" Style="{StaticResource SectionTitleStyle}" />
                    <StackPanel Spacing="8">
                        <TextBlock Text="Max lines for text areas" />
                        <NumberBox Value="{x:Bind ViewModel.MaxTextAreaLines, Mode=TwoWay}" Minimum="1" Maximum="30" SpinButtonPlacementMode="Inline" />
                    </StackPanel>
                </StackPanel>

                <StackPanel
                    x:Name="HotkeyRouterSectionPanel"
                    Margin="{StaticResource SectionMargin}"
                    Spacing="16"
                    Visibility="{x:Bind ViewModel.HotkeyRouterSectionVisibility, Mode=OneWay}"
                    x:Load="{x:Bind ViewModel.IsHotkeyRouterSectionVisible}">
                    <Grid ColumnSpacing="12">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Hotkey router" Grid.Column="0" Style="{StaticResource SectionTitleStyle}" />
                        <Button Grid.Column="1" Content="Add mapping" Command="{x:Bind ViewModel.AddHotkeyRouteCommand}" />
                    </Grid>
                    <ListView ItemsSource="{x:Bind ViewModel.HotkeyRoutes, Mode=OneWay}" SelectionMode="None">
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="viewModels:HotkeyRouteViewModel">
                                <Border Style="{StaticResource CardStyle}" Margin="0,4,0,4" Padding="16">
                                    <Grid ColumnSpacing="12">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Grid.Column="0" Spacing="6">
                                            <TextBlock Text="From" />
                                            <TextBox Text="{x:Bind FromHotkey, Mode=TwoWay}" PlaceholderText="CTRL+ALT+F" />
                                        </StackPanel>
                                        <StackPanel Grid.Column="1" Spacing="6">
                                            <TextBlock Text="To" />
                                            <TextBox Text="{x:Bind ToHotkey, Mode=TwoWay}" PlaceholderText="CTRL+ALT+N" />
                                        </StackPanel>
                                        <Button Grid.Column="2" Content="Remove" Command="{x:Bind SettingsRoot.ViewModel.RemoveHotkeyRouteCommand}" CommandParameter="{Binding}" />
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</ContentDialog>
